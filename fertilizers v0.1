{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7328c187",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-06-06T22:39:05.013725Z",
     "iopub.status.busy": "2025-06-06T22:39:05.013514Z",
     "iopub.status.idle": "2025-06-06T22:39:06.329763Z",
     "shell.execute_reply": "2025-06-06T22:39:06.329103Z"
    },
    "papermill": {
     "duration": 1.320446,
     "end_time": "2025-06-06T22:39:06.330742",
     "exception": false,
     "start_time": "2025-06-06T22:39:05.010296",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s5e6/sample_submission.csv\n",
      "/kaggle/input/playground-series-s5e6/train.csv\n",
      "/kaggle/input/playground-series-s5e6/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e67460be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-06T22:39:06.335330Z",
     "iopub.status.busy": "2025-06-06T22:39:06.335093Z",
     "iopub.status.idle": "2025-06-06T22:39:07.292624Z",
     "shell.execute_reply": "2025-06-06T22:39:07.291995Z"
    },
    "papermill": {
     "duration": 0.960842,
     "end_time": "2025-06-06T22:39:07.293823",
     "exception": false,
     "start_time": "2025-06-06T22:39:06.332981",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# read csv\n",
    "\n",
    "competition_file_path = \"/kaggle/input/playground-series-s5e6\"\n",
    "train_file_path = competition_file_path + \"/train.csv\"\n",
    "test_file_path = competition_file_path + \"/test.csv\"\n",
    "sample_subbission_file_path = competition_file_path + \"/sample_submission.csv\"\n",
    "\n",
    "\n",
    "train_dataset = pd.read_csv(train_file_path)\n",
    "test_dataset = pd.read_csv(test_file_path)\n",
    "sample_submission = pd.read_csv(sample_subbission_file_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "647cb324",
   "metadata": {
    "papermill": {
     "duration": 0.001586,
     "end_time": "2025-06-06T22:39:07.297447",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.295861",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Investigate dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6dbc9a8d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-06T22:39:07.301380Z",
     "iopub.status.busy": "2025-06-06T22:39:07.301197Z",
     "iopub.status.idle": "2025-06-06T22:39:07.318476Z",
     "shell.execute_reply": "2025-06-06T22:39:07.317989Z"
    },
    "papermill": {
     "duration": 0.020332,
     "end_time": "2025-06-06T22:39:07.319388",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.299056",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Temparature</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Moisture</th>\n",
       "      <th>Soil Type</th>\n",
       "      <th>Crop Type</th>\n",
       "      <th>Nitrogen</th>\n",
       "      <th>Potassium</th>\n",
       "      <th>Phosphorous</th>\n",
       "      <th>Fertilizer Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>70</td>\n",
       "      <td>36</td>\n",
       "      <td>Clayey</td>\n",
       "      <td>Sugarcane</td>\n",
       "      <td>36</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>28-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>69</td>\n",
       "      <td>65</td>\n",
       "      <td>Sandy</td>\n",
       "      <td>Millets</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>28-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>29</td>\n",
       "      <td>63</td>\n",
       "      <td>32</td>\n",
       "      <td>Sandy</td>\n",
       "      <td>Millets</td>\n",
       "      <td>24</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>17-17-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>35</td>\n",
       "      <td>62</td>\n",
       "      <td>54</td>\n",
       "      <td>Sandy</td>\n",
       "      <td>Barley</td>\n",
       "      <td>39</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>10-26-26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>35</td>\n",
       "      <td>58</td>\n",
       "      <td>43</td>\n",
       "      <td>Red</td>\n",
       "      <td>Paddy</td>\n",
       "      <td>37</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>DAP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  Temparature  Humidity  Moisture Soil Type  Crop Type  Nitrogen  \\\n",
       "0   0           37        70        36    Clayey  Sugarcane        36   \n",
       "1   1           27        69        65     Sandy    Millets        30   \n",
       "2   2           29        63        32     Sandy    Millets        24   \n",
       "3   3           35        62        54     Sandy     Barley        39   \n",
       "4   4           35        58        43       Red      Paddy        37   \n",
       "\n",
       "   Potassium  Phosphorous Fertilizer Name  \n",
       "0          4            5           28-28  \n",
       "1          6           18           28-28  \n",
       "2         12           16        17-17-17  \n",
       "3         12            4        10-26-26  \n",
       "4          2           16             DAP  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9c0d4d96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-06T22:39:07.323681Z",
     "iopub.status.busy": "2025-06-06T22:39:07.323531Z",
     "iopub.status.idle": "2025-06-06T22:39:07.417911Z",
     "shell.execute_reply": "2025-06-06T22:39:07.417054Z"
    },
    "papermill": {
     "duration": 0.097878,
     "end_time": "2025-06-06T22:39:07.419202",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.321324",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 750000 entries, 0 to 749999\n",
      "Data columns (total 10 columns):\n",
      " #   Column           Non-Null Count   Dtype \n",
      "---  ------           --------------   ----- \n",
      " 0   id               750000 non-null  int64 \n",
      " 1   Temparature      750000 non-null  int64 \n",
      " 2   Humidity         750000 non-null  int64 \n",
      " 3   Moisture         750000 non-null  int64 \n",
      " 4   Soil Type        750000 non-null  object\n",
      " 5   Crop Type        750000 non-null  object\n",
      " 6   Nitrogen         750000 non-null  int64 \n",
      " 7   Potassium        750000 non-null  int64 \n",
      " 8   Phosphorous      750000 non-null  int64 \n",
      " 9   Fertilizer Name  750000 non-null  object\n",
      "dtypes: int64(7), object(3)\n",
      "memory usage: 57.2+ MB\n"
     ]
    }
   ],
   "source": [
    "train_dataset.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eef41083",
   "metadata": {
    "papermill": {
     "duration": 0.001747,
     "end_time": "2025-06-06T22:39:07.423223",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.421476",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Looking at the data, we can see that there are no nulls so we don't have to worry about that\n",
    "\n",
    "\n",
    "But we'll have to find a good way to hot encode the training dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "843fd592",
   "metadata": {
    "papermill": {
     "duration": 0.001793,
     "end_time": "2025-06-06T22:39:07.426910",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.425117",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Encoding data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7352ec83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-06T22:39:07.431281Z",
     "iopub.status.busy": "2025-06-06T22:39:07.431109Z",
     "iopub.status.idle": "2025-06-06T22:39:07.807570Z",
     "shell.execute_reply": "2025-06-06T22:39:07.806928Z"
    },
    "papermill": {
     "duration": 0.380207,
     "end_time": "2025-06-06T22:39:07.808901",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.428694",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "count     750000\n",
      "unique         5\n",
      "top        Sandy\n",
      "freq      156710\n",
      "Name: Soil Type, dtype: object\n",
      "['Clayey' 'Sandy' 'Red' 'Loamy' 'Black']\n"
     ]
    }
   ],
   "source": [
    "### soil type\n",
    "\n",
    "print(train_dataset[\"Soil Type\"].describe())\n",
    "\n",
    "print(train_dataset[\"Soil Type\"].unique())\n",
    "\n",
    "train_dataset[train_dataset[\"Soil Type\"] == \"Clayey\"] = 0\n",
    "train_dataset[train_dataset[\"Soil Type\"] == \"Sandy\"] = 1\n",
    "train_dataset[train_dataset[\"Soil Type\"] == \"Red\"] = 2\n",
    "train_dataset[train_dataset[\"Soil Type\"] == \"Loamy\"] = 3\n",
    "train_dataset[train_dataset[\"Soil Type\"] == \"Black\"] = 4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fe58c64",
   "metadata": {
    "papermill": {
     "duration": 0.001821,
     "end_time": "2025-06-06T22:39:07.813014",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.811193",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Since there are 5 unique soil types in this column, we can easily encode this 0 -> 4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3603f20f",
   "metadata": {
    "papermill": {
     "duration": 0.001827,
     "end_time": "2025-06-06T22:39:07.816752",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.814925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Enscapluting logic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f7bee09b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-06T22:39:07.821661Z",
     "iopub.status.busy": "2025-06-06T22:39:07.821401Z",
     "iopub.status.idle": "2025-06-06T22:39:08.346207Z",
     "shell.execute_reply": "2025-06-06T22:39:08.345488Z"
    },
    "papermill": {
     "duration": 0.528543,
     "end_time": "2025-06-06T22:39:08.347173",
     "exception": false,
     "start_time": "2025-06-06T22:39:07.818630",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Temparature</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Moisture</th>\n",
       "      <th>Soil Type</th>\n",
       "      <th>Crop Type</th>\n",
       "      <th>Nitrogen</th>\n",
       "      <th>Potassium</th>\n",
       "      <th>Phosphorous</th>\n",
       "      <th>Fertilizer Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>70</td>\n",
       "      <td>36</td>\n",
       "      <td>Clayey</td>\n",
       "      <td>Sugarcane</td>\n",
       "      <td>36</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>28-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>69</td>\n",
       "      <td>65</td>\n",
       "      <td>Sandy</td>\n",
       "      <td>Millets</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>28-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>29</td>\n",
       "      <td>63</td>\n",
       "      <td>32</td>\n",
       "      <td>Sandy</td>\n",
       "      <td>Millets</td>\n",
       "      <td>24</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>17-17-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>35</td>\n",
       "      <td>62</td>\n",
       "      <td>54</td>\n",
       "      <td>Sandy</td>\n",
       "      <td>Barley</td>\n",
       "      <td>39</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>10-26-26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>35</td>\n",
       "      <td>58</td>\n",
       "      <td>43</td>\n",
       "      <td>Red</td>\n",
       "      <td>Paddy</td>\n",
       "      <td>37</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>DAP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>749995</th>\n",
       "      <td>749995</td>\n",
       "      <td>25</td>\n",
       "      <td>69</td>\n",
       "      <td>30</td>\n",
       "      <td>Clayey</td>\n",
       "      <td>Maize</td>\n",
       "      <td>8</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>28-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>749996</th>\n",
       "      <td>749996</td>\n",
       "      <td>37</td>\n",
       "      <td>64</td>\n",
       "      <td>58</td>\n",
       "      <td>Loamy</td>\n",
       "      <td>Sugarcane</td>\n",
       "      <td>38</td>\n",
       "      <td>8</td>\n",
       "      <td>20</td>\n",
       "      <td>17-17-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>749997</th>\n",
       "      <td>749997</td>\n",
       "      <td>35</td>\n",
       "      <td>68</td>\n",
       "      <td>59</td>\n",
       "      <td>Sandy</td>\n",
       "      <td>Ground Nuts</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>29</td>\n",
       "      <td>10-26-26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>749998</th>\n",
       "      <td>749998</td>\n",
       "      <td>31</td>\n",
       "      <td>68</td>\n",
       "      <td>29</td>\n",
       "      <td>Red</td>\n",
       "      <td>Cotton</td>\n",
       "      <td>9</td>\n",
       "      <td>11</td>\n",
       "      <td>12</td>\n",
       "      <td>20-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>749999</th>\n",
       "      <td>749999</td>\n",
       "      <td>33</td>\n",
       "      <td>55</td>\n",
       "      <td>29</td>\n",
       "      <td>Loamy</td>\n",
       "      <td>Cotton</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "      <td>Urea</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>750000 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  Temparature  Humidity  Moisture Soil Type    Crop Type  \\\n",
       "0            0           37        70        36    Clayey    Sugarcane   \n",
       "1            1           27        69        65     Sandy      Millets   \n",
       "2            2           29        63        32     Sandy      Millets   \n",
       "3            3           35        62        54     Sandy       Barley   \n",
       "4            4           35        58        43       Red        Paddy   \n",
       "...        ...          ...       ...       ...       ...          ...   \n",
       "749995  749995           25        69        30    Clayey        Maize   \n",
       "749996  749996           37        64        58     Loamy    Sugarcane   \n",
       "749997  749997           35        68        59     Sandy  Ground Nuts   \n",
       "749998  749998           31        68        29       Red       Cotton   \n",
       "749999  749999           33        55        29     Loamy       Cotton   \n",
       "\n",
       "        Nitrogen  Potassium  Phosphorous Fertilizer Name  \n",
       "0             36          4            5           28-28  \n",
       "1             30          6           18           28-28  \n",
       "2             24         12           16        17-17-17  \n",
       "3             39         12            4        10-26-26  \n",
       "4             37          2           16             DAP  \n",
       "...          ...        ...          ...             ...  \n",
       "749995         8         16            6           28-28  \n",
       "749996        38          8           20        17-17-17  \n",
       "749997         6         11           29        10-26-26  \n",
       "749998         9         11           12           20-20  \n",
       "749999         4         10            9            Urea  \n",
       "\n",
       "[750000 rows x 10 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class workflow:\n",
    "    train_dataset = []\n",
    "    test_dataset = []\n",
    "    sample_submission = []\n",
    "    def __init__(self):\n",
    "        self.load_data()\n",
    "\n",
    "    def load_data(self):\n",
    "        # read csv\n",
    "        competition_file_path = \"/kaggle/input/playground-series-s5e6\"\n",
    "        train_file_path = competition_file_path + \"/train.csv\"\n",
    "        test_file_path = competition_file_path + \"/test.csv\"\n",
    "        sample_subbission_file_path = competition_file_path + \"/sample_submission.csv\"\n",
    "        \n",
    "        self.train_dataset = pd.read_csv(train_file_path)\n",
    "        self.test_dataset = pd.read_csv(test_file_path)\n",
    "        self.sample_submission = pd.read_csv(sample_subbission_file_path)\n",
    "\n",
    "workflow_instance = workflow()\n",
    "workflow_instance.train_dataset"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 12184666,
     "sourceId": 91717,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.205501,
   "end_time": "2025-06-06T22:39:08.765581",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-06-06T22:39:01.560080",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
